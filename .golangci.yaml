---
linters:
  disable-all: true
  enable:
    # enabled by default
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    # containedctx is a linter that detects struct contained context.Context
    # field.
    - containedctx
    # check whether the function uses a non-inherited context.
    # - contextcheck - FP on server.Shutdown(ctx)
    # Checks that sentinel errors are prefixed with the Err and error types are
    # suffixed with the Error.
    - errname
    # errorlint is a linter for that can be used to find code that will cause
    # problems with the error wrapping scheme introduced in Go 1.13.
    - errorlint
    # Tool for detection of long functions.
    # - funlen TODO: re-enable
    # check that no global variables exist
    # This analyzer checks for global variables and errors on any found.
    # A global variable is a variable declared in package scope and that can be
    # read and written to by any function within the package. Global variables
    # can cause side effects which are difficult to keep track of. A code in one
    # function may change the variables state while another unrelated chunk of
    # code may be effected by it.
    # - gochecknoglobals TODO: remove all globals
    # Checks that no init functions are present in Go code.
    # - gochecknoinits TODO: remove all inits
    # Computes and checks the cognitive complexity of functions.
    - gocognit
    # Finds repeated strings that could be replaced by a constant.
    - goconst
    # Provides diagnostics that check for bugs, performance and style issues.
    # Extensible without recompilation through dynamic rules.
    # Dynamic rules are written declaratively with AST patterns, filters, report message and optional suggestion.
    - gocritic
    # Computes and checks the cyclomatic complexity of functions
    - gocyclo
    # Check if comments end in a period
    - godot
    # Checks that printf-like functions are named with f at the end
    - goprintffuncname
    # Inspects source code for security problems.
    - gosec
    # A linter that checks the number of methods inside an interface.
    - interfacebloat
    # Finds commonly misspelled English words in comments.
    - misspell
    # Reports deeply nested if statements.
    # - nestif TODO: re-enable
    # noctx finds sending http request without context.Context.
    # - noctx TODO: re-enable
    # Checks for misuse of Sprintf to construct a host with port in a URL.
    - nosprintfhostport
    # paralleltest detects missing usage of t.Parallel() method in your Go test.
    - paralleltest
    # find code that shadows one of Go's predeclared identifiers.
    - predeclared
    # Fast, configurable, extensible, flexible, and beautiful linter for Go.
    # Drop-in replacement of golint.
    - revive
    # A linter that detect the possibility to use variables/constants from the
    # Go standard library.
    - usestdlibvars


linters-settings:
  paralleltest:
    # Ignore missing calls to `t.Parallel()` and only report incorrect uses of it.
    # Default: false
    ignore-missing: true

issues:
  exclude-rules:
    - path: (.+)_test.go
      linters:
        - funlen
        - goconst
        - errcheck # TODO: re-enable and check test errs
        - errorlint # TODO: re-enable and check test errs
        - staticcheck # TODO: re-enable
        - misspell # TODO: re-enable
        - usestdlibvars # TODO: re-enable
        - ineffassign # TODO: re-enable
        - govet # TODO: re-enable
        - gosec # TODO: re-enable
        - typecheck # TODO: re-enable
